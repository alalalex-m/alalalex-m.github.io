#!/bin/bash

# 设置错误处理
set -e

# 获取应用程序包所在目录
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
APP_DIR="$(dirname "$(dirname "$SCRIPT_DIR")")"
PROJECT_DIR="$(dirname "$APP_DIR")"

# 切换到项目目录
cd "$PROJECT_DIR"

# 记录日志（用于调试）
LOG_FILE="/tmp/portfolio-deployer.log"
echo "$(date): Starting deployment from $PROJECT_DIR" > "$LOG_FILE"

# 检查是否在正确的项目目录
if [ ! -f "package.json" ]; then
    echo "$(date): Error - package.json not found" >> "$LOG_FILE"
    osascript -e 'display alert "错误" message "请在项目根目录运行此应用程序"'
    exit 1
fi

echo "$(date): Found package.json, proceeding with deployment" >> "$LOG_FILE"

# 运行快速部署脚本
if [ -f "quick-deploy.sh" ]; then
    echo "$(date): Running quick-deploy.sh" >> "$LOG_FILE"
    ./quick-deploy.sh >> "$LOG_FILE" 2>&1
else
    echo "$(date): quick-deploy.sh not found, running basic deployment" >> "$LOG_FILE"
    # 如果没有快速部署脚本，执行基本部署
    echo "🚀 开始部署..."
    
    # 检查分支
    current_branch=$(git branch --show-current)
    if [ "$current_branch" != "main" ]; then
        git checkout main
    fi
    
    # 检查更改
    if [ -n "$(git status --porcelain)" ]; then
        git add .
        timestamp=$(date "+%Y-%m-%d %H:%M:%S")
        git commit -m "Auto deploy: $timestamp"
        git push origin main
        echo "✅ 部署完成！"
    else
        echo "⚠️  没有检测到更改"
    fi
fi

echo "$(date): Deployment completed" >> "$LOG_FILE"

# 显示完成消息
osascript -e 'display notification "部署完成！" with title "Portfolio Deployer"'

# 等待几秒后关闭
sleep 2
